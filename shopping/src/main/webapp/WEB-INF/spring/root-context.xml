<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<util:properties id="db" location="/WEB-INF/properties/database.properties" />
	<util:properties id="file" location="classpath:/properties/file.properties" />

	<!-- 데이터베이스 연결 --> 
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> 
		<property name="url" value="#{db['dev_uri']}" /> 
		<property name="username" value="#{db['id']}"/> 
		<property name="password" value="#{db['pwd']}"/> 
	</bean> 

 	
	<!-- query format -->
<!-- 	<bean id="dataSourceSqlFormat" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSource"/>
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="SQL        : " />
			</bean>
		</property>
	</bean>
  -->
	<!-- SqlSession Factory--> 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource" /> 
		
		<!-- MyBatis 설정 파일의 위치를 지정합니다. --> 
		<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml" /> 
		
		<!-- SQL 파일의 위치를 지정합니다. --> 
		<property name="mapperLocations" value="classpath:/sqlmap/*.xml" /> 
	</bean> 

	<!-- SqlSession --> 
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache"> 
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" /> 
	</bean> 

	<!-- 지정된 베이스 패키지에서 DAO(Mapper) 를 검색하여 등록합니다. -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
		<property name="basePackage" value="com.shopping.dao" />  
	</bean> 

	<!-- 트랜잭션 매니저 bean 을 등록합니다. --> 
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource" /> 
	</bean> 

	<!-- 아노테이션 기반의 트랜잭션을 사용합니다. --> 
	<tx:annotation-driven transaction-manager="transactionManager"/>
			
</beans>
